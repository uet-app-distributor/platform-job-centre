name: Deploy customer application
run-name: Deploy customer application

on:
  workflow_dispatch:
    inputs:
      customer_app_blob:
        description: "gsutil URI of customer app config blob object."
        type: string
        required: true
      customer_app_name:
        description: "Name of the customer app."
        type: string
        required: true
      github_user:
        description: "GitHub user."
        type: string
        required: true
      github_repo:
        description: "GitHub repo."
        type: string
        required: true
jobs:
  deploy_customer_app:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout customer application repository
        uses: actions/checkout@v3
        with:
          repository: ${{ inputs.github_user }}/${{ inputs.github_repo }}
          ref: main
          path: customer-app

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GOOGLE_RUNNER_CREDENTIALS }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v1

      - name: Get customer app configuration file
        run: gsutil cat ${{ inputs.customer_app_blob }} > ${{ github.workspace }}/customer-app/app_config.yaml

      - name: Checkout template-generator repository
        uses: actions/checkout@v3
        with:
          repository: uet-app-distributor/template-generator
          ref: main
          path: template-generator

      - name: Generate Dockerfile, K8s job
        run: |
          cd ${{ github.workspace }}/template-generator
          pip install -r requirements.txt
          python3 main.py ${{ github.workspace }}/customer-app/app_config.yaml
          mv customer-app-dockerfile create-db-user-job.yaml ${{ github.workspace }}/customer-app

      # - name: Set up QEMU
      #   uses: docker/setup-qemu-action@v2

      # - name: Set up Docker Buildx
      #   uses: docker/setup-buildx-action@v2

      # - name: Login to Docker Hub
      #   uses: docker/login-action@v2
      #   with:
      #     username: ${{ secrets.DOCKERHUB_USERNAME }}
      #     password: ${{ secrets.DOCKERHUB_TOKEN }}

      # - name: Build and push
      #   uses: docker/build-push-action@v4
      #   with:
      #     context: ${{ github.workspace }}/customer-app
      #     platforms: linux/amd64,linux/arm64
      #     push: true
      #     tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ inputs.customer_app_name }}:latest

      - name: Send job manifest file to server
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.DISTRIBUTOR_INSTANCE_HOST }}
          port: ${{ secrets.DISTRIBUTOR_INSTANCE_SSH_PORT }}
          key: ${{ secrets.DISTRIBUTOR_INSTANCE_SSH_KEY }}
          username: ${{ secrets.DISTRIBUTOR_INSTANCE_PRIMARY_USER }}
          strip_components: 1
          source: "customer-app/create-db-user-job.yaml"
          target: /tmp/customer_app_manifest/${{ github.run_id }}/${{ github.run_number }}

      - name: Deploy job
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.DISTRIBUTOR_INSTANCE_HOST }}
          port: ${{ secrets.DISTRIBUTOR_INSTANCE_SSH_PORT }}
          key: ${{ secrets.DISTRIBUTOR_INSTANCE_SSH_KEY }}
          username: ${{ secrets.DISTRIBUTOR_INSTANCE_PRIMARY_USER }}
          script: |
            microk8s kubectl apply -f  /tmp/customer_app_manifest/${{ github.run_id }}/${{ github.run_number }}/create-db-user-job.yaml
